{"metadata": {"version": 1, "disable_limits": false, "instance_type": "ml.m5.4xlarge", "disable_validation": true}, "parameters": [], "nodes": [{"node_id": "f5624e57-e3d5-46f5-bd99-19970ed4c9d4", "type": "SOURCE", "operator": "sagemaker.s3_source_0.1", "parameters": {"dataset_definition": {"datasetSourceType": "S3", "name": "titanic.csv", "description": null, "s3ExecutionContext": {"s3Uri": "s3://udacity-ml-aws/titanic/titanic.csv", "s3ContentType": "csv", "s3HasHeader": true, "s3FieldDelimiter": ",", "s3DirIncludesNested": false, "s3AddsFilenameColumn": false, "s3RoleArn": null, "s3CsvEncodingType": "UTF_8", "s3SkipLines": 0, "s3MultiLine": false, "s3DataType": "S3Prefix", "s3ManifestPlain": {"s3Uris": null}}, "canvasDatasetMetadata": null}}, "inputs": [], "outputs": [{"name": "default", "sampling": {"sampling_method": "sample_by_count", "sample_size": 50000}}]}, {"node_id": "a73db01a-0503-4652-b820-b2b87f010eb2", "type": "TRANSFORM", "operator": "sagemaker.spark.infer_and_cast_type_0.1", "parameters": {}, "trained_parameters": {"schema": {"PassengerId": "long", "Survived": "long", "Pclass": "long", "Name": "string", "Sex": "string", "Age": "long", "SibSp": "long", "Parch": "long", "Ticket": "string", "Fare": "float", "Cabin": "string", "Embarked": "string"}}, "inputs": [{"name": "default", "node_id": "f5624e57-e3d5-46f5-bd99-19970ed4c9d4", "output_name": "default"}], "outputs": [{"name": "default"}]}, {"node_id": "259218dd-cd94-455b-a61a-210f99919910", "type": "TRANSFORM", "operator": "sagemaker.spark.custom_code_0.1", "parameters": {"operator": "Python (PySpark)", "pyspark_parameters": {"code": "from pyspark.ml.feature import StringIndexer\n\n# Table is available as variable `df`\n# Initialize the StringIndexer for the 'Sex' column with handleInvalid='skip'\nindexer_sex = StringIndexer(inputCol=\"Sex\", outputCol=\"SexIndex\", handleInvalid='skip')\n\n# Initialize the StringIndexer for the 'Embarked' column with handleInvalid='skip'\nindexer_embarked = StringIndexer(inputCol=\"Embarked\", outputCol=\"EmbarkedIndex\", handleInvalid='skip')\n\n# Fit and transform the DataFrame for 'Sex' column\ndf = indexer_sex.fit(df).transform(df)\n\n# Fit and transform the DataFrame for 'Embarked' column\ndf = indexer_embarked.fit(df).transform(df)\ndf = df.drop('Name', 'Cabin', 'Sex', 'Ticket')\n"}, "name": "get rid of names and cabin"}, "inputs": [{"name": "df", "node_id": "a73db01a-0503-4652-b820-b2b87f010eb2", "output_name": "default"}], "outputs": [{"name": "default"}]}]}